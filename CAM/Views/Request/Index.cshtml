@model CAM.Core.Domain.Request

@{
    ViewBag.Title = "Index";
}

<form class="form-horizontal">

    <legend>Employee Information</legend>

    <div class="control-group">

        <fieldset>
            <div class="control-group">
                <label class="control-label" for="name" >Name</label>
                <div class="controls">
                    @Html.TextBoxFor(model => model.FirstName, new { @placeholder = "First Name" })
                    @Html.TextBoxFor(model => model.LastName, new { @placeholder = "Lirst Name" })
                    @Html.ValidationMessageFor( model => model.FirstName )
                    @Html.ValidationMessageFor( model => model.LastName )
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(model => model.Email, new { @class="control-label" })
                <div class="controls">
                    @Html.TextBoxFor( model => model.Email, new { @placeholder = "Email" })
                    @Html.ValidationMessageFor( model => model.Email )
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(model => model.PositionTitle, new { @class="control-label" })
                <div class="controls">
                    @Html.TextBoxFor( model => model.PositionTitle, new { @placeholder = "Position Title" })
                    @Html.ValidationMessageFor( model => model.PositionTitle)
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(model => model.Department, new { @class="control-label" })
                <div class="controls">
                    @Html.TextBoxFor( model => model.Department, new { @placeholder = "Department" })
                    @Html.TextBoxFor( model => model.Unit, new { @placeholder = "Unit" })
                    @Html.ValidationMessageFor( model => model.Department )
                    @Html.ValidationMessageFor( model => model.Unit )
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(model => model.OfficeLocation, new { @class="control-label" })
                <div class="controls">
                    @Html.TextBoxFor( model => model.OfficeLocation, new { @placeholder = "Location / Building" })
                    @Html.TextBoxFor( model => model.Room, new { @placeholder = "Room #", @class="input-mini" })
                    @Html.ValidationMessageFor( model => model.OfficeLocation )
                    @Html.ValidationMessageFor( model => model.Room )
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(model => model.ContactPhone, new { @class="control-label" })
                <div class="controls">
                    @Html.TextBoxFor( model => model.ContactPhone, new { @placeholder = "(###) XXX-XXXX " })
                    @Html.ValidationMessageFor( model => model.ContactPhone)
                </div>
            </div>
            <div class="control-group">
                <label class="control-label" for="name" >Employment Dates</label>
                <div class="controls">
                    @Html.TextBox("Start", Model.Start.ToString("d"), new {@class="datepicker input-small"} )
                    @Html.ValidationMessageFor( model => model.Start )
                    <span style="margin: 0 5px;">through</span>
                    @Html.TextBox("End", Model.End.HasValue ? Model.End.Value.ToString("d") : string.Empty, new {@class="datepicker input-small"} )
                    @Html.ValidationMessageFor( model => model.End )
                </div>
            </div>
            <div class="control-group">
                <label class="control-label">Type:</label>
                <div class="controls">
                    <label class="radio">
                        <input type="radio" name="Type" value="NewPosition" />
                        New Position
                    </label>
                    <label class="radio">
                        <input type="radio" name="Type" value="Rehire" />
                        Rehire
                    </label>
                </div>
            </div>
        </fieldset>

        

    </div>
    
    <legend>Email</legend>

    <div class="control-group">

        <fieldset>

            <div class="control-group">
                @Html.LabelFor(model => model.NeedsEmail, new { @class="control-label" })
                <div class="controls">
                    <label class="checkbox">
                        @Html.CheckBoxFor(model => model.NeedsEmail)
                        Yes, user needs a new email account
                    </label>

                    <p class="help-block">
                        <em>* Users who will need to access Outlook calendars will need a CAES email account.</em>
                    </p>

                </div>
            </div>

            <div class="control-group">

            </div>

            <div class="control-group">
                <label class="control-label" for="distributionLists">Distribution List(s):</label>
                <div class="controls">
                    <ul id="distLists" class="unstyled">
                        <li>@Html.TextBox("DistributionLists")<a href="#" class="btn btn-danger removeDistList">
                                <i class="icon-minus"></i> Remove
                            </a>
                        </li>
                    </ul>

                    <a href="#" id="addDistLists" class="btn btn-success">
                        <i class="icon-plus"></i> Add
                    </a>
                </div>
            </div>

        </fieldset>

    </div>

    <div class="form-actions">
        <input type="submit" value="Submit" class="btn btn-primary" />
        <a href="#" class="btn">Cancel</a>
    </div>

</form>

@section AdditionalScripts{
    
    <script type="text/javascript">
    $(function () {

        $("#addDistLists").click(function (e) {

            var li = $("<li>");
            li.append($("<input>").attr("type", "text").attr("name", "DistributionLists"));
            var a = $("<a>").attr("href", "#").addClass("btn").addClass("btn-danger").addClass("removeDistList");
            a.append($("<i>").addClass("icon-minus"));
            a.append(" Remove");
            li.append(a);

            li.hide();

            $("#distLists").append(li);

            li.show('normal');

            e.preventDefault();
        });

        $("#distLists").on('click', 'a', function (e) {
            $(this).closest("li").hide('normal', function () { $(this).remove(); });
            e.preventDefault();
        });

    });
    </script>

    <style type="text/css">
    #distLists li
    {
        margin:  .5em 0;
    }
    </style>

}


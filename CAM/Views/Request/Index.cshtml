@model CAM.Core.Domain.Request

@{
    ViewBag.Title = "Index";
}

<form class="form-horizontal">

    <legend>Employee Information</legend>

    <div class="control-group">

        <fieldset>
            <div class="control-group">
                <label class="control-label" for="name" >Name</label>
                <div class="controls">
                    @Html.TextBoxFor(model => model.FirstName, new { @placeholder = "First Name" })
                    @Html.TextBoxFor(model => model.LastName, new { @placeholder = "Lirst Name" })
                    @Html.ValidationMessageFor( model => model.FirstName )
                    @Html.ValidationMessageFor( model => model.LastName )
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(model => model.Email, new { @class="control-label" })
                <div class="controls">
                    @Html.TextBoxFor( model => model.Email, new { @placeholder = "Email" })
                    @Html.ValidationMessageFor( model => model.Email )
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(model => model.PositionTitle, new { @class="control-label" })
                <div class="controls">
                    @Html.TextBoxFor( model => model.PositionTitle, new { @placeholder = "Position Title" })
                    @Html.ValidationMessageFor( model => model.PositionTitle)
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(model => model.Department, new { @class="control-label" })
                <div class="controls">
                    @Html.TextBoxFor( model => model.Department, new { @placeholder = "Department" })
                    @Html.TextBoxFor( model => model.Unit, new { @placeholder = "Unit" })
                    @Html.ValidationMessageFor( model => model.Department )
                    @Html.ValidationMessageFor( model => model.Unit )
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(model => model.OfficeLocation, new { @class="control-label" })
                <div class="controls">
                    @Html.TextBoxFor( model => model.OfficeLocation, new { @placeholder = "Location / Building" })
                    @Html.TextBoxFor( model => model.Room, new { @placeholder = "Room #", @class="input-mini" })
                    @Html.ValidationMessageFor( model => model.OfficeLocation )
                    @Html.ValidationMessageFor( model => model.Room )
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(model => model.ContactPhone, new { @class="control-label" })
                <div class="controls">
                    @Html.TextBoxFor( model => model.ContactPhone, new { @placeholder = "(###) XXX-XXXX " })
                    @Html.ValidationMessageFor( model => model.ContactPhone)
                </div>
            </div>
            <div class="control-group">
                <label class="control-label" for="name" >Employment Dates</label>
                <div class="controls">
                    @Html.TextBox("Start", Model.Start.ToString("d"), new {@class="datepicker input-small"} )
                    @Html.ValidationMessageFor( model => model.Start )
                    <span style="margin: 0 5px;">through</span>
                    @Html.TextBox("End", Model.End.HasValue ? Model.End.Value.ToString("d") : string.Empty, new {@class="datepicker input-small"} )
                    @Html.ValidationMessageFor( model => model.End )
                </div>
            </div>
            <div class="control-group">
                <label class="control-label">Type:</label>
                <div class="controls">
                    <label class="radio">
                        <input type="radio" name="Type" value="NewPosition" />
                        New Position
                    </label>
                    <label class="radio">
                        <input type="radio" name="Type" value="Rehire" />
                        Rehire
                    </label>
                </div>
            </div>
        </fieldset>

        

    </div>
    
    <legend>Email</legend>

    <div class="control-group">

        <fieldset>

            <div class="control-group">
                @Html.LabelFor(model => model.NeedsEmail, new { @class="control-label" })
                <div class="controls">
                    <label class="checkbox">
                        @Html.CheckBoxFor(model => model.NeedsEmail)
                        Yes, user needs a new email account
                    </label>

                    <p class="help-block">
                        <em>* Users who will need to access Outlook calendars will need a CAES email account.</em>
                    </p>

                </div>
            </div>

            <div class="control-group">
                <label class="control-label" for="distributionLists">Distribution List(s):</label>
                <div class="controls">
                    <ul id="distLists" class="unstyled">
                        <li>@Html.TextBox("DistributionLists")
                            <a href="#" class="btn btn-danger removeDistList">
                                <i class="icon-minus"></i> Remove
                            </a>
                        </li>
                    </ul>

                    <a href="#" id="addDistLists" class="btn btn-success">
                        <i class="icon-plus"></i> Add
                    </a>
                </div>
            </div>

        </fieldset>

    </div>

    <legend>Software</legend>

    <div class="control-group">

        <fieldset>

            <div class="control-group">
                <p class="help-block">
                    The following software (http://computing.caes.ucdavis.edu/computing-policies/supported-software) will be installed by default on all CA&ES managed computers.  Please check the boxes under Optional Software if you would like the software installed on the new user’s computer.  If the user requires software that is not listed below, please contact the Computer Resources Unit (CRU) helpdesk at csrequests@caes.ucdavis.edu.
                </p>
            </div>

            <div class="control-group">
                <label class="control-label" for="software">Optional Software</label>
                <div class="controls">
                    <ul id="software" class="unstyled">
                        <li>
                            <label class="checkbox">
                                <input type="checkbox" value="pps" />
                                PPS
                            </label>
                        </li>
                        <li>
                            <label class="checkbox">
                                <input type="checkbox" value="dymo" />
                                DYMO Label Printing Software
                            </label>
                        </li>
                        <li>
                            <label class="checkbox">
                                <input type="checkbox" value="skype" />
                                Skype
                            </label>
                        </li>
                        <li>
                            <label class="checkbox">
                                <input type="checkbox" value="endnote" />
                                EndNote
                            </label>
                        </li>
                        <li>
                            <label class="checkbox">
                                <input type="checkbox" value="earth" />
                                Google Earth
                            </label>
                        </li>
                    </ul>
                </div>
            </div>

        </fieldset>

    </div>

    <legend>Hardware</legend>

    <div class="control-group">

        <!-- New Position -->
        <fieldset style="display: none;">
            <div class="controls">
                <p class="help-block"></p>
            </div>
        </fieldset>

        <!-- Rehire -->
        <fieldset style="display: none;">
            <div class="controls">
                <p class="help-block"></p>
            </div>
        </fieldset>

        <!-- No type selected -->
        <fieldset">
            <div class="controls">
                <p class="help-block">You need to select whether the employee will be a new hire or a rehire.</p>
            </div>
        </fieldset>

    </div>

    <div class="form-actions">
        <input type="submit" value="Submit" class="btn btn-primary" />
        <a href="#" class="btn">Cancel</a>
    </div>

</form>

@section AdditionalScripts{
    
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.tmpl.min.js")"></script>

    <script type="text/javascript">
    $(function () {

        $("#addDistLists").click(function (e) {
            var test = $("#DistListTemplate").tmpl().appendTo("#distLists")
            $(test).show("normal");

            e.preventDefault();
        });

        $("#distLists").on('click', 'a', function (e) {
            $(this).closest("li").hide('normal', function () { $(this).remove(); });
            e.preventDefault();
        });

    });
    </script>

    <style type="text/css">
    #distLists li
    {
        margin:  .5em 0;
    }
    </style>

    <script id="DistListTemplate" type="text/x-jquery-tmpl">
        <li style="display:  none;"><input type="text" Name="DistributionLists" value="${Value}" />
            <a href="#" class="btn btn-danger removeDistList">
                <i class="icon-minus"></i> Remove
            </a>
        </li>
    </script>

}

